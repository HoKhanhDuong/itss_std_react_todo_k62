[{"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js":"1","/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js":"2","/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js":"3","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js":"4","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js":"5","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js":"6","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js":"7","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js":"8","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js":"9","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage_firebase.js":"10","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/firebase.js":"11","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Auth.js":"12","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage_todo.js":"13","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage_user.js":"14"},{"size":500,"mtime":1621479965122,"results":"15","hashOfConfig":"16"},{"size":315,"mtime":1621570469091,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1621479965122,"results":"18","hashOfConfig":"16"},{"size":2208,"mtime":1621570724823,"results":"19","hashOfConfig":"16"},{"size":727,"mtime":1621479965122,"results":"20","hashOfConfig":"16"},{"size":776,"mtime":1621479965122,"results":"21","hashOfConfig":"16"},{"size":795,"mtime":1621568982066,"results":"22","hashOfConfig":"16"},{"size":977,"mtime":1621568041105,"results":"23","hashOfConfig":"16"},{"size":68,"mtime":1621479965122,"results":"24","hashOfConfig":"16"},{"size":1591,"mtime":1621568484387,"results":"25","hashOfConfig":"16"},{"size":1096,"mtime":1621570845420,"results":"26","hashOfConfig":"16"},{"size":2677,"mtime":1621571347927,"results":"27","hashOfConfig":"16"},{"size":1643,"mtime":1621569877007,"results":"28","hashOfConfig":"16"},{"size":871,"mtime":1621570806340,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"h3p83m",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js",[],["65","66"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js",["67"],"import React from 'react'\n\n/* スタイルシート */\nimport './styles/main.css';\n\n/* コンポーネント */\nimport Todo from './components/Todo';\nimport Auth from \"./components/Auth\";\n\nfunction App() {\n  \n  return (\n    <div className=\"container is-fluid\">\n      <Auth />\n    </div>\n  );\n}\n\nexport default App;\n","/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js",["68","69","70"],"import React, { useState } from 'react';\n\n// @import url('https://cdnjs.cloudflare.com/ajax/libs/bulma/0.8.2/css/bulma.min.css');\n\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\nimport useStorage from '../hooks/storage';\n\nimport useStorageTodo from \"../hooks/storage_todo\";\nimport Auth from \"./Auth\";\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\nconst [items, addItem, updateItem, cleanItems] = useStorageTodo();\n\n    const handleCheckTodoItem = (item) => {\n        updateItem(item);\n    };\n    const handleAdd = (text) => {\n        const newItem = {key: getKey(), text: text, done: false};\n        addItem(newItem);\n    };\n    const [tab, setTab] = useState(\"すべて\");\n    const itemTab = () => {\n        return items.filter((item) => {\n            if (tab === \"すべて\") {\n                return item;\n            }\n            if (tab === \"未完了\" && !item.done) {\n                return item;\n            }\n            if (tab === \"完了済み\" && item.done) {\n                return item;\n            }\n        });\n    };\n    const handleChangeTab = (target) => {\n        setTab(target);\n    };\n    const handleCleanItem = () => {\n        cleanItems();\n    };\n    return (\n        <div className=\"panel\">\n            <div className=\"panel-heading\">\n                ITSS ToDoアプリ\n            </div>\n            <Input onAdd={handleAdd}/>\n            <Filter onClick={handleChangeTab}/>\n            {itemTab().map(item => (\n                <TodoItem item={item} key={item.key} onCheck={handleCheckTodoItem}/>\n            ))}\n            <div className=\"panel-block\">\n                {itemTab().length} items\n            </div>\n            <div className=\"panel-block\">\n                <button className=\"button is-light is-fullwidth\" onClick={handleCleanItem}>全てのToDoを削除</button>\n            </div>\n        </div>\n  );\n}\n\nexport default Todo;","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js",["71"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\n\nimport {React} from 'react';\n\nfunction Filter({onClick}) {\n  const title = [\"すべて\", \"未完了\", \"完了済み\"];\n  const handleClick = (e) => {\n      e.preventDefault();\n      onClick(e.target.className);\n  };\n  return (\n      <div className=\"panel-tabs\">\n          {title.map((item, index) => (\n              <a\n                  href=\"#\"\n                  key={index}\n                  className={item}\n                  onClick={handleClick}\n              >{item}</a>\n          ))}\n      </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage_firebase.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/firebase.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Auth.js",["72","73"],"import React, {useEffect, useRef, useState} from \"react\";\nimport firebase, {storageImage, uiConfig} from \"../lib/firebase\";\nimport {StyledFirebaseAuth} from \"react-firebaseui\";\nimport useStorageUser from \"../hooks/storage_user\";\nimport Todo from \"./Todo\";\n\nfunction Auth() {\n    const [users, addUser, updateUser] = useStorageUser();\n    const inputFile = useRef(null);\n    const [currentUser, setCurrentUser] = useState([]);\n    useEffect(() => {\n        const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n            if (!!user) {\n                const target = {key: user.email, name: user.displayName, image: user.photoURL};\n                setCurrentUser(target);\n                let flag = false;\n                for (let target of users) {\n                    if (target.key === user.email) {\n                        flag = true;\n                        break;\n                    }\n                }\n                if (!flag) {\n                    addUser(target);\n                }\n            }\n        });\n        return () => unregisterAuthObserver();\n    });\n    const handleClickAvatar = () => {\n        inputFile.current.click();\n    };\n    const handleChangeFile = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const file = e.target.files[0];\n        // console.log(file);\n        await storageImage.child(currentUser.key).put(file);\n        const url = await storageImage.child(currentUser.key).getDownloadURL();\n        await setCurrentUser({...currentUser, image: url});\n        await updateUser(currentUser);\n        e.target.value = null;\n    };\n    if (currentUser.length === 0) {\n        return (\n            <div className=\"column panel-block\">\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\n            </div>\n        );\n    }\n    const signout = () => {\n        firebase.auth().signOut();\n        setCurrentUser([]);\n    };\n    \n    return (\n        <div>\n            <div className=\"columns panel-block\">\n                <div className=\"column is-one-fifth\">\n                    <img src={currentUser.image} alt=\"\" onClick={this.handleClickAvatar} style={{cursor: 'pointer'}}/>\n                    <input type='file' id='file' ref={inputFile} style={{display: 'none'}} onChange={this.handleChangeFile}/>\n                </div>\n                <div className=\"column\">\n                    {firebase.auth().currentUser.displayName}\n                    <button className=\"button is-danger is-light is-small\" onClick={signout}>Sign out</button>\n                </div>\n            </div>\n            <Todo/>\n        </div>\n    );\n}\nexport default Auth; ","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage_todo.js",["74"],"import { useState, useEffect } from 'react';\nimport {db} from '../lib/firebase'\nimport {db_todo} from '../lib/firebase'\n/* \n  【Storageフック】\n　・TodoをlocalStorageを使って保存する\n　・以下機能をサポートする\n　  - localstrageに保存されているすべてのTodoの読み出し機能\n　  - Todoをlocalstrageに保存する\n　  - localstrageにあるTodoを削除する\n*/\n\nfunction useStorageTodo() {\n  const [items, setItems] = useState([]);\n　\n　/* 副作用を使う */\n  useEffect(() => {\n    const fetchData =  async () => {\n      const snap = await db_todo.get();\n      setItems(snap.docs.map(doc => (\n          {...doc.data(), key: doc.id}\n      )));\n    };\n    fetchData();\n  }, []);\n\n  const addItem = async item => {\n    await db_todo.doc(`${item.key}`).set({\n      text: item.text,\n      done: item.done,\n    });\n    setItems([item,...items]);\n  };\n  const updateItem = async item => {\n    await db_todo.doc(`${item.key}`).update({\n      text: item.text,\n      done: !item.done,\n    });\n    setItems(items.map((tmp) => {\n      if (tmp.key === item.key)\n        tmp.done = !tmp.done;\n      return tmp;\n    }))\n  };\n  //\n  // const putItems = async items => {\n  //   await clearItems();\n  //   for(let item of items){\n  //     await db.doc(`${item.key}`).set({\n  //       text: item.text,\n  //       done: item.done,\n  //     });\n  //   }\n  //   setItems(items);\n  // };\n\n  const clearItems = async () => {\n    for(let item of items){\n      await db_todo.doc(item.key).delete();\n    }\n    setItems([]);\n  };\n\n  return [items, addItem, updateItem, clearItems];\n}\n\nexport default useStorageTodo; ","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage_user.js",["75"],"import { useState, useEffect } from 'react';\nimport {db_user, storageImage} from '../lib/firebase'\n\nfunction useStorageUser() {\n    const [users, setUsers] = useState([]);\n    useEffect(() => {\n        const fetchData =  async () => {\n            const snap = await db_user.get();\n            setUsers(snap.docs.map(doc => (\n                {...doc.data(), key: doc.id}\n            )));\n        };\n        fetchData();\n    }, []);\n\n    const addUser = async user => {\n        await db_user.doc(`${user.key}`).set({\n            name: user.name,\n            image: user.image\n        });\n        setUsers([user,...users]);\n    };\n\n    const updateUser = async user => {\n        await db_user.doc(`${user.key}`).update({\n            name: user.name,\n            image: user.image,\n        })\n    };\n\n    return [users, addUser, updateUser];\n}\n\nexport default useStorageUser;",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":12},{"ruleId":"80","severity":1,"message":"84","line":18,"column":8,"nodeType":"82","messageId":"83","endLine":18,"endColumn":18},{"ruleId":"80","severity":1,"message":"85","line":21,"column":8,"nodeType":"82","messageId":"83","endLine":21,"endColumn":12},{"ruleId":"86","severity":1,"message":"87","line":38,"column":36,"nodeType":"88","messageId":"89","endLine":38,"endColumn":38},{"ruleId":"90","severity":1,"message":"91","line":19,"column":15,"nodeType":"92","endLine":24,"endColumn":16},{"ruleId":"80","severity":1,"message":"93","line":30,"column":11,"nodeType":"82","messageId":"83","endLine":30,"endColumn":28},{"ruleId":"80","severity":1,"message":"94","line":33,"column":11,"nodeType":"82","messageId":"83","endLine":33,"endColumn":27},{"ruleId":"80","severity":1,"message":"95","line":2,"column":9,"nodeType":"82","messageId":"83","endLine":2,"endColumn":11},{"ruleId":"80","severity":1,"message":"96","line":2,"column":18,"nodeType":"82","messageId":"83","endLine":2,"endColumn":30},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Todo' is defined but never used.","Identifier","unusedVar","'useStorage' is defined but never used.","'Auth' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'handleClickAvatar' is assigned a value but never used.","'handleChangeFile' is assigned a value but never used.","'db' is defined but never used.","'storageImage' is defined but never used.","no-global-assign","no-unsafe-negation"]